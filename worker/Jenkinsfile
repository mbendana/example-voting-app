pipeline {
    agent any
    tools {
        maven 'Maven 3.8.6'
    }
    environment {
        GITHUB_API_URL='https://api.GitHub.com/repos/mbendana/example-voting-app'
    }
    stages {
        stage('build') {
            steps {
                echo 'Compiling worker app'
                dir('worker') {
                    sh 'mvn compile'
                }
            }
        }
        stage('test') {
            steps {
                dir('worker') {
                    echo 'Running unit test on worker app'
                    sh 'mvn clean test'
                }
            }
        }
        stage("package") {
            steps {
                dir('worker') {
                    echo 'Packaging worker app'
                    sh 'mvn package -DskipTests'
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline for worker app has finished.'
        }
        success {
            withCredentials([usernamePassword(credentialsId: 'github-mbendana', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                sh 'curl -X POST --user $USERNAME:$PASSWORD --data  "{\"state\": \"success\", \"context\": \"Build URL $BUILD_URL, Job URL $JOB_URL, Branch Name $BRANCH_NAME\", \"description\": \"Jenkins\", \"target_url\": \"http://jenkins.mhalton.tk:8080/job/instavote/job/worker-build/$BUILD_NUMBER/console\"}" --url $GITHUB_API_URL/statuses/$GIT_COMMIT'
            }
            echo 'Pipeline was successful.'
            archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
        }
        failure {
            withCredentials([usernamePassword(credentialsId: 'github-mbendana', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
            sh 'curl -X POST --user $USERNAME:$PASSWORD --data  "{\"state\": \"failure\", \"context\": \"Build URL $BUILD_URL, Job URL $JOB_URL, Branch Name $BRANCH_NAME\", \"description\": \"Jenkins\", \"target_url\": \"http://jenkins.mhalton.tk:8080/job/instavote/job/worker-build/$BUILD_NUMBER/console\"}" --url $GITHUB_API_URL/statuses/$GIT_COMMIT'
            }
            echo 'Pipeline failed.'
        }
    }
}
